<<<<<<< HEAD
(a*b)**(1/4)-1
sqrt(5)
20*sqrt(130)
1/7.536-1/18.977
(0.9+2*0.9**2)/(1-0.9**2)
0.15/12
1/1.0125
1-35*0.0125
log(1/1.0125)
-log(1+0.0125)
log(0.5625)
log(0.5625)/(-log(1.0125))
(1-(1/1.0125)**46)/0.0125
35-(1-(1/1.0125)**46)/0.0125
(35-(1-(1/1.0125)**46)/0.0125)*1.0125**47
(35-(1-(1/1.0125)**46)/0.0125)*(1.0125)**47
v<-1/1.0125
(35-(1-v**46)/0.0125)*(1.0125)**47
177.1178*1.0125**47
v
177.1178*(1/0.9876543)**47
177.1178*(0.9876543)**(-47)
(1.1**2*2-1)/0.1
0.08/0.92
1.03**6-1
1.03**(1/2)-1
i<-1.03**6-1
v<-1/(1+i)
v**6
50*(1-v**6)/(1.03**(1/2)-1)
i<-0.04
v<-1/(1+i)
1-v**(1/12)
((1+i)**3-(1+i))/(1-v**(1/12))
30-((1+i)**3-(1+i))/(1-v**(1/12))
1-(1.05)**(-1/2)
1.05**2-1
(1.04)**5-1
(1.05)**5-1
v<-1/(1.05)
v**10
d4<-1-(1.05)**(-1/2)
20000*(1-0.6139133)*(0.02409993)/(0.1025*0.2762816)
1-(1/1.05)**(1/2)
v<-1/(1.1025)
v**10
20000*(1-v**10)*(0.02409993)/(0.1025*0.2762816)
i<-0.1025
(1+i)**5-1
20000*(1-v**10)/i*(0.02409993)/0.6288946
20000*(1-v**10)/i*d4/((1+i)**5-1)
i<-0.04
v<-1/(1+i)
5*(30-(1-v**30)/i)/i+45/i
5*(30-(1-v**30)/i)/i+45/i+5*v**30/i
6.25*(1.06)-1
6*log(1.01)
1.4328/(6*log(1.01))
6*log(1.01)*12
6*log(1.01)*72
144*log(1.01)
q("no")
10*1.0585-10.460
3*log(2)/0.04
3*0.693/0.04
6.25*(1.06)-1
i<-0.075
v<-1/(1+i)
1/i*(1-2*v**5)/(1-v**5)
1/i*1/(1-v**5)
1000*exp(0.08)
1000*exp(0.1)
1000*(exp(0.1)-exp(0.08))
144*log(1.01)
exp(0.08)-exp(0.075)
(exp(0.08)-exp(0.075))/exp(0.075)
(exp(0.08)-exp(0.075))/exp(0.075)*1000
1000*exp(0.075)
(exp(0.08)-exp(0.035))/exp(0.035)*1000
ㄱ<-0.1025
r<-0.1025
i<-(1+0.5)**2-1
v<-1/(1+i)
v10<-v**10
r2i<-(1+r)/(1+i)
r2i10<-r2i**10
(v10+(1+r)/(1+i)**(1/2))*((r2i10-1)/r2i-1)
i
i<-(1+0.05)**2-1
i
10*(1.1025**10+1.1025**10.5)
11000/54.3926
10*(1.1025**11+1.1025**11.5)
11000/(10*(1.1025**11+1.1025**11.5))
11000/(11*(1.1025**11+1.1025**11.5))
1000/(2.925+3.0715)
1.1025**11
1.1025**11.5
(5.153+7.036-9.180)/(5.153*7.036)
2*(log(7.04)/log(1+2*(log(2)/27.72)))
8.08+0.002*55
8.08-0.002*55/1.1
1669/5890
1296/5890
2926/5890
6515/10238
q("no")
3+4
5+7
a<-0.1
5+7#
a<-0.1
getwd()
7846.5/1382.6
3818.1/1258.1
6236/1124
31.4/0.4
i<-0.075#
v<-1/(1+i)#
d12<-12(1-v**(1/12))#
d12
d12<-12*(1-v**(1/12))
(1-v**(1/12))#
d12
v
1200000*(1-v**6)/d12
i12<-12*((1+i)**(1/12)-1)
i12
1-v**20
5000000/12*i12/(1-v**20)
i2<-0.15#
a<-(1+i2/2)**20#
b<-(1+i2/2)**40-1#
c<-(1+i2/2)**4-1#
1000/(a*b/c)
a#
b#
c
7846.5/1382.6
i365<-365((1+0.075)**(1/365)-1)
i365<-365*((1+0.075)**(1/365)-1)
i365
i365365*i/i365
365*i/i365
i<-0.075
365*i/i365
log(1+i)
365*i/(log(1+i))
83514568/322430416
install.packages("lifecontingencies")
library("lifecontingencies")
??lifecontingencies-package
?lifecontingencies-package
?lifecontingencies
accumulatedValue(0.075,20)
595+264
640+197
q("no")
exp(-0.01)
q("no")
9273224/9310466
4748413/8706035
1585213-1328947
(1585213-1328947)/1585213
(8146759-7330956)/8146759
(4748413-1585213)/9310466
(3439235-3108449)/4748413
(3439235-3108449)
q("no")
ls()
a
cx
p.x
v
x
q("no")
1869400/25900000
2505602/93960000
3244813/222200000
181829/140250000
132650900/134550000
14839/171484
library(ggplot2)
?ggplot
ls
ls()
55/327
16/52
11/48
4069834621-1735301243
3909683361-1622443526
2287-406.5
2287-406.5+73.4
A <- c(5 4, 4, -7, -3, -1, 7, 4, 2)
A <- matrix(c(5, 4, 4, -7, -3, -1, 7, 4, 2), 3, byrow = T)
A
?eigen
eigen(A)
A <- matrix(c(5, 4, 4, -7, -3, -1, 7, 4, 2), 3)
eigen(A)
det(A)
P <- matrix(c(1, 1, 1, 1, 0, -1, 0, 1, 1), 3)
P
solve(P)
?hash
??hash
Q <- matrix(c(1, 0, 0, 0, 2/7, -1/7, 0, 0, -8/7, -10/7, 1, 90, 1/7, -11/7, 0, 1), 4)
solve(Q)
det(Q)
1/7
Q <- matrix(c(1, 0, 0, 0, 2/7, -1/7, 0, 0, -8/7, -10/7, 1, 0, 1/7, -11/7, 0, 1), 4)
solve(Q)
A <- marrix(c(3, -4, 16, 0, 6 -15, 0, 2, -5), 3)
A <- matrix(c(3, -4, 16, 0, 6 -15, 0, 2, -5), 3)
A <- matrix(c(3, -4, 16, 0, 6, -15, 0, 2, -5), 3)
A
eigen(A)
2/sqrt(29)
5/sqrt(29)
?while
37.37+35.02+19.57+129.34+4.94+167.1+14.59+7.18+246.61+21.75+8.53
37.37+35.02+19.57+129.34+4.94+167.1+14.59+7.18+246.61+21.75+8.53 + 36.82
66470000+42450000+7594351
install.packages("tidyverse")
library(tidyverse)
tidyverse_update()
update.packages(c("ggplot2", "jsonlite", "tidyr", "xml2"))
??update.packages
?update.packages
tidyverse_update()
install.packages(c("nycflight13", "gapminder", "Lahman"))
install.packages(c("nycflights13", "gapminder", "Lahman"))
dput(mtcars)
list.files()
?dput
mtcars.2 <-
)
mtcars.2 <- structure(list(mpg = c(21, 21, 22.8, 21.4, 18.7, 18.1, 14.3, #
24.4, 22.8, 19.2, 17.8, 16.4, 17.3, 15.2, 10.4, 10.4, 14.7, 32.4, #
30.4, 33.9, 21.5, 15.5, 15.2, 13.3, 19.2, 27.3, 26, 30.4, 15.8, #
19.7, 15, 21.4), cyl = c(6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, #
8, 8, 8, 8, 8, 4, 4, 4, 4, 8, 8, 8, 8, 4, 4, 4, 8, 6, 8, 4), #
    disp = c(160, 160, 108, 258, 360, 225, 360, 146.7, 140.8, #
    167.6, 167.6, 275.8, 275.8, 275.8, 472, 460, 440, 78.7, 75.7, #
    71.1, 120.1, 318, 304, 350, 400, 79, 120.3, 95.1, 351, 145, #
    301, 121), hp = c(110, 110, 93, 110, 175, 105, 245, 62, 95, #
    123, 123, 180, 180, 180, 205, 215, 230, 66, 52, 65, 97, 150, #
    150, 245, 175, 66, 91, 113, 264, 175, 335, 109), drat = c(3.9, #
    3.9, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92, #
    3.07, 3.07, 3.07, 2.93, 3, 3.23, 4.08, 4.93, 4.22, 3.7, 2.76, #
    3.15, 3.73, 3.08, 4.08, 4.43, 3.77, 4.22, 3.62, 3.54, 4.11#
    ), wt = c(2.62, 2.875, 2.32, 3.215, 3.44, 3.46, 3.57, 3.19, #
    3.15, 3.44, 3.44, 4.07, 3.73, 3.78, 5.25, 5.424, 5.345, 2.2, #
    1.615, 1.835, 2.465, 3.52, 3.435, 3.84, 3.845, 1.935, 2.14, #
    1.513, 3.17, 2.77, 3.57, 2.78), qsec = c(16.46, 17.02, 18.61, #
    19.44, 17.02, 20.22, 15.84, 20, 22.9, 18.3, 18.9, 17.4, 17.6, #
    18, 17.98, 17.82, 17.42, 19.47, 18.52, 19.9, 20.01, 16.87, #
    17.3, 15.41, 17.05, 18.9, 16.7, 16.9, 14.5, 15.5, 14.6, 18.6#
    ), vs = c(0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, #
    0, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1), am = c(1, #
    1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, #
    0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1), gear = c(4, 4, 4, 3, #
    3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3, 3, #
    3, 3, 4, 5, 5, 5, 5, 5, 4), carb = c(4, 4, 1, 1, 2, 1, 4, #
    2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2, 2, 4, 2, 1, #
    2, 2, 4, 6, 8, 2)), .Names = c("mpg", "cyl", "disp", "hp", #
"drat", "wt", "qsec", "vs", "am", "gear", "carb"), row.names = c("Mazda RX4", #
"Mazda RX4 Wag", "Datsun 710", "Hornet 4 Drive", "Hornet Sportabout", #
"Valiant", "Duster 360", "Merc 240D", "Merc 230", "Merc 280", #
"Merc 280C", "Merc 450SE", "Merc 450SL", "Merc 450SLC", "Cadillac Fleetwood", #
"Lincoln Continental", "Chrysler Imperial", "Fiat 128", "Honda Civic", #
"Toyota Corolla", "Toyota Corona", "Dodge Challenger", "AMC Javelin", #
"Camaro Z28", "Pontiac Firebird", "Fiat X1-9", "Porsche 914-2", #
"Lotus Europa", "Ford Pantera L", "Ferrari Dino", "Maserati Bora", #
"Volvo 142E"), class = "data.frame")
mtcars.2
session_info()
devtools::session_info()
mpg
library(tidyverse)
mpg
1:6
die <- 1:6
read.csv("https://gist.githubusercontent.com/garrettgman/9629323/raw/ee5dfc039fd581cb467cc69c226ea2524913c3d8/deck.csv")
deck <- read.csv("https://gist.githubusercontent.com/garrettgman/9629323/raw/ee5dfc039fd581cb467cc69c226ea2524913c3d8/deck.csv")
str(deck)
deck$face
deck <- read.csv("https://gist.githubusercontent.com/garrettgman/9629323/raw/ee5dfc039fd581cb467cc69c226ea2524913c3d8/deck.csv", stringsAsFactors = FALSE)
str(deck)
42.4/93.8*100
42.4/99.4*100
42.4/90.4*100
38.5/0.825
setwd("./Google 드라이브/Works/Class/Data_Science/R.WD/DS201701/R")
library(rmarkdown)
render("./Literacy_sample.Rmd")
install.packages("pander")
render("./Literacy_sample.Rmd")
=======
install.packages(c("BH", "curl", "devtools", "digest", "evaluate", "formatR", "gapminder", "ggplot2", "git2r", "gridExtra", "gtable", "Hmisc", "htmltools", "httr", "kernlab", "knitr", "latticeExtra", "memoise", "mnormt", "multcomp", "munsell", "mvtnorm", "nlme", "NLP", "packrat", "R6", "Rcpp", "RCurl", "rJava", "rsconnect", "rstudioapi", "scales", "shiny", "TH.data", "XML", "xtable"))
?rexp
x <- rexp(1000)
?log
x2 <- -log(runif(1000))
hist(x)
hist(x2)
par(mfrow=c(1,2))
hist(x)
hist(x2)
x3 <- -log(1-runif(1000))
par(mfrow=c(2,2))
hist(x2)
hist(x)
hist(x3)
x3 <- -log(1-runif(1000))
hist(x3)
set.seed(1)
x1 <- rexp(1000)
x2 <- -log(runif(1000))
x3 <- -log(1-runif(1000))
hist(x1)
hist(x2)
hist(x3)
hist(x1, prob = TRUE)
hist(x2, prob = TRUE)
hist(x3, prob = TRUE)
hist(x3, prob = TRUE, ylim = c(0,1))
hist(x1, prob = TRUE, ylim = c(0, 1))
hist(x2, prob = TRUE, ylim = c(0, 1))
hist(x3, prob = TRUE, ylim = c(0, 1))
u1 <- runif(1000)
u2 <- 1 - u1
hist(u1)
hist(u2)
hist(u1)
hist(runif(10000), prob = TRUE)
hist(-log(runif(10000)), prob = TRUE)
hist(-log(1 - runif(10000)), prob = TRUE)
hist(rexp(10000), prob = TRUE)
hist(-log(runif(10000)), prob = TRUE)
hist(-log(runif(10000)), prob = TRUE, ylim = c(0, 1))
hist(-log(1 - runif(10000)), prob = TRUE, ylim = c(0, 1))
hist(rexp(10000), prob = TRUE, ylim = c(0, 1))
qqplot(x1, x3)
qqplot(x2, x3)
qqplot(x3, x2)
qqplot(x1, x2)
library(xlsx)
read.xlsx("./midterm.xlsx", 1)
read.xlsx("./midterm.xlsx", 1, startRow = 2)
?read.xlsx
read.xlsx("./midterm.xlsx", 1, startRow = 3)
midterm <- read.xlsx("./midterm.xlsx", 1, startRow = 3)
summary(midterm)
summary(midterm$"최종점수")
49825000+169619000
32348/9
(49825000+169619000)/9
49825000+169619000
(49825000+169619000)/32348
?read.spss
?read.svc
install.packages("foreign")
getwd()
read.spss("./teacher_0713.sav")
library(foreign)
read.spss("./teacher_0713.sav")
read.spss("./teacher_0713.sav", encoding = "CP949")
makeplot_mosaic <- function(data, x, y, ...){#
  xvar <- deparse(substitute(x))#
  yvar <- deparse(substitute(y))#
  mydata <- data[c(xvar, yvar)];#
  mytable <- table(mydata);#
  widths <- c(0, cumsum(apply(mytable, 1, sum)));#
  heights <- apply(mytable, 1, function(x){c(0, cumsum(x/sum(x)))});#
#
  alldata <- data.frame();#
  allnames <- data.frame();#
  for(i in 1:nrow(mytable)){#
    for(j in 1:ncol(mytable)){#
      alldata <- rbind(alldata, c(widths[i], widths[i+1], heights[j, i], heights[j+1, i]));#
    }#
  }#
  colnames(alldata) <- c("xmin", "xmax", "ymin", "ymax")#
#
  alldata[[xvar]] <- rep(dimnames(mytable)[[1]],rep(ncol(mytable), nrow(mytable)));#
  alldata[[yvar]] <- rep(dimnames(mytable)[[2]],nrow(mytable));#
#
  ggplot(alldata, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) + #
    geom_rect(color="black", aes_string(fill=yvar)) +#
    xlab(paste(xvar, "(count)")) + ylab(paste(yvar, "(proportion)"));#
}
makeplot(mosaic(mtcars, vs gear))
makeplot_mosaic(mtcars, vs gear)
makeplot_mosaic <- function(data, x, y, ...){#
  xvar <- deparse(substitute(x))#
  yvar <- deparse(substitute(y))#
  mydata <- data[c(xvar, yvar)];#
  mytable <- table(mydata);#
  widths <- c(0, cumsum(apply(mytable, 1, sum)));#
  heights <- apply(mytable, 1, function(x){c(0, cumsum(x/sum(x)))});#
#
  alldata <- data.frame();#
  allnames <- data.frame();#
  for(i in 1:nrow(mytable)){#
    for(j in 1:ncol(mytable)){#
      alldata <- rbind(alldata, c(widths[i], widths[i+1], heights[j, i], heights[j+1, i]));#
    }#
  }#
  colnames(alldata) <- c("xmin", "xmax", "ymin", "ymax")#
#
  alldata[[xvar]] <- rep(dimnames(mytable)[[1]],rep(ncol(mytable), nrow(mytable)));#
  alldata[[yvar]] <- rep(dimnames(mytable)[[2]],nrow(mytable));#
#
  ggplot(alldata, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) + #
    geom_rect(color="black", aes_string(fill=yvar)) +#
    xlab(paste(xvar, "(count)")) + ylab(paste(yvar, "(proportion)"));#
}
makeplot_mosaic(mtcars, vs gear)
makeplot_mosaic <- function(data, x, y, ...){#
  xvar <- deparse(substitute(x))#
  yvar <- deparse(substitute(y))#
  mydata <- data[c(xvar, yvar)];#
  mytable <- table(mydata);#
  widths <- c(0, cumsum(apply(mytable, 1, sum)));#
  heights <- apply(mytable, 1, function(x){c(0, cumsum(x/sum(x)))});#
#
  alldata <- data.frame();#
  allnames <- data.frame();#
  for(i in 1:nrow(mytable)){#
    for(j in 1:ncol(mytable)){#
      alldata <- rbind(alldata, c(widths[i], widths[i+1], heights[j, i], heights[j+1, i]));#
    }#
  }#
  colnames(alldata) <- c("xmin", "xmax", "ymin", "ymax")#
#
  alldata[[xvar]] <- rep(dimnames(mytable)[[1]],rep(ncol(mytable), nrow(mytable)));#
  alldata[[yvar]] <- rep(dimnames(mytable)[[2]],nrow(mytable));#
#
  ggplot(alldata, aes(xmin=xmin, xmax=xmax, ymin=ymin, ymax=ymax)) + #
    geom_rect(color="black", aes_string(fill=yvar)) +#
    xlab(paste(xvar, "(count)")) + ylab(paste(yvar, "(proportion)"));#
}
makeplot_mosaic(mtcars, vs gear)
makeplot_mosaic
makeplot_mosaic(mtcars, vs, gear)
library(ggplot2)
makeplot_mosaic(mtcars, vs, gear)
"한글"
center <- function(x, type){}
center
center <- function(x, type){
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
x < rcauchy(10)
x <- rcauchy(10)
x
center(x, "mean")
center(x, "median")
center(x, "trimmed")
ccc <- c("b", "QQ", "a", "A", "bb")
ccc
for (ch in ccc)
cat(ch, ":", switch(EXPR = ch, a = 1, b = 2:3), "\n")
cat(ch, ":", switch(EXPR = ch, a = , A = 1, b = 2:3, "Otherwise: last"), "\n")
ch
ccc
for (ch in ccc)
cat(ch, ":", switch(EXPR = ch, a = , A = 1, b = 2:3, "Otherwise: last"), "\n")
ccc
for (ch in ccc)
cat(ch, ":", switch(EXPR = ch, a = 2, A = 1, b = 2:3, "Otherwise: last"), "\n")
for (ch in ccc)
cat(ch, ":", switch(EXPR = ch, a = "", A = 1, b = 2:3, "Otherwise: last"), "\n")
for (ch in ccc)
cat(ch, ":", switch(EXPR = ch, a = , A = 1, b = 2:3, "Otherwise: last"), "\n")
ff <- gl(3, 1, labels = LETTERS[3:1])
ff
ff[1]
switch(ff[1], A = "I am A", B = "Bb..", C = "is C")
switch(as.character(ff[1]), A = "I am A", B = "Bb..", C = "is C")
for(i in c(-1:3, 9)) print(switch(i, 1, 2 , 3, 4))
-1:3
switch(1, invisible(pi), pi)
switch(2, invisible(pi), pi)
install.packages("maps")
install.packages("mapdata")
library(ggplot2)
df <- data.frame(g = 1:2, x = 1:2)
df
df <- data.frame(g = factor(1:2), x = 1:2)
df
str(df)
ggplot(data = df, mapping = aes(x = x, fill = g))
ggplot(data = df, mapping = aes(x = x, fill = g)) + geom_bar()
ggplot(data = df, mapping = aes(x = x, fill = g)) + geom_bar(stat = "identity")
ggplot(data = df, mapping = aes(x = "", y = x, fill = g)) + geom_bar(stat = "identity")
ggplot(data = df, mapping = aes(x = "", y = x, fill = rev(g))) + geom_bar(stat = "identity")
ggplot(data = df, mapping = aes(x = "", y = x, fill = g)) + geom_bar(stat = "identity")
ggplot(data = df, mapping = aes(x = "", y = x, fill = rev(g))) + geom_bar(stat = "identity")
ggplot(data = df, mapping = aes(x = "", y = x, fill = rev(g))) + geom_bar(stat = "identity", position = position_stack(reverse = TRUE))
ggplot(data = df, mapping = aes(x = "", y = rev(x), fill = g)) + geom_bar(stat = "identity", position = position_stack())
quartz(dpi = 72)
ggplot(data = df, mapping = aes(x = "", y = x, fill = g)) + geom_bar(stat = "identity")
quartz(dpi = 72)
ggplot(data = df, mapping = aes(x = "", y = x, fill = rev(g))) + geom_bar(stat = "identity")
str(rev(g))
str(rev(df$g))
quartz(dpi = 72)
ggplot(data = df, mapping = aes(x = "", y = x, fill = g)) + geom_bar(stat = "identity", position = position_stack(reverse = TRUE))
quartz(dpi = 72)
ggplot(data = df, mapping = aes(x = "", y = rev(x), fill = g)) + geom_bar(stat = "identity", position = position_stack(reverse = TRUE))
ls(globalenv())
ls()
makeplot_mosaic
midterm
?`<-`
environment()
search()
library(pryr)
parernvs(all = TRUE)
parenvs(all = TRUE)
as.environment("package:stats")
library(rmarkdown)
library(knitr)
help(package = "rmarkdown")
getwd()
setwd("./Google 드라이브/Works/Class/Case_Studies_in_Stat/R.WD/Sejong_v2/R/")
render("./Sejong_poll_ggplot.Rmd", output_file = "test.html")
getwd()
setwd("../../../../Data_Science/R.WD/r_programming/")
setwd("./R")
library(prur)
library(pryr)
parenvs(all = TRUE)
as.environment("package:knitr")
globalenv()
baseenv()
emptyenv()
parent.env(glovalenv())
parent.env(globalenv())
ls(emptyenv())
ls(globalenv())
rm(list = ls())
load("./r_modifying_values.RData")
ls(globalenv()
)
deck
deal
deal()
deal(deck)
fix(deal)
deal()
fix(deal)
cards
read.csv("../data/cards.csv", stringsAsFactors = FALSE)
cards <- read.csv("../data/cards.csv", stringsAsFactors = FALSE)
head(cards)
deal()
deal()
DECK <- deck
deck <- deck[-1, ]
head(deck)
deal <- function(){}
deal <- function(){
card <- deck[1, ]
deck <- deck[-1, ]
card
}
deal()
deal()
deck
deck <- DECK
fix(deal)
deal
deal()
deal()
deal()
deal()
deck
DECK
fix(deal)
deck <- DECK
head(deck)
deal()
deal()
deal()
show_env <- function() {}
show_env <- function() {
list(ran.in = environment(),)
objects = ls.str()))
fix(show_env)
show_env()
deal()
show_env()
show_env(deal)
show_env(deal())
show_env
show_env()
fix(show_env)
show_env()
deal()
show_env(deal)
show_env(deal())
deal()
show_env(deal)
fix(show_env)
show_env(deal)
show_env(deal())
deal()
fix(deal)
fix(deal)
fix(deal)
deal()
deal()
>>>>>>> 17793f482325e9dd87c9aeb9062a143a3dc80977
